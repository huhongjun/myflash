<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" width="1094" height="600" backgroundColor="0x868686"
				layout="absolute" applicationComplete="initApp()">
	<mx:Script>
		<![CDATA[
			private var xmlUrl:String = "assets/data.xml";
			private var configXML:XML;
			private var dataXML:XML;
			
			private var chart3D:Chart3D;
			private var mark:int = 0;
			
			private function initApp():void
			{
				stage.align = StageAlign.TOP_LEFT; 			// 当影片输出的时候，整个影片相对浏览器的左上方对齐
				stage.scaleMode = StageScaleMode.NO_SCALE; 	// 影片不会跟随浏览的尺寸大小而发生缩放。

				urlTextInput.text = xmlUrl;
				
				//
				chart3D = new Chart3D();
				chart3DCanvas.rawChildren.addChild(chart3D);

				chart3D.setup3D(chart3DCanvas.width,chart3DCanvas.height);
				
				//
				var urlReq:URLRequest = new URLRequest("assets/config.xml");
				var urlLoader:URLLoader = new URLLoader();
				
				urlLoader.addEventListener(Event.COMPLETE, configXMLComplete);
				urlLoader.load(urlReq);			
			}
			
			private function loadXML():void
			{		

				var urlReq2:URLRequest = new URLRequest(xmlUrl);
				var urlLoader2:URLLoader = new URLLoader();
				urlLoader2.addEventListener(Event.COMPLETE, dataXMLComplete);
				urlLoader2.load(urlReq2);			
				
			}
			
			private function configXMLComplete(evt:Event):void
			{
				configXML = XML(evt.target.data);
				configXMLTextArea.text = configXML;
			}
			
			private function dataXMLComplete(evt:Event):void
			{
				dataXML = XML(evt.target.data);

				chart3D.createCubeFromXML(dataXML);	
				chart3D.renderClick();
			}
			
			private function show3D():void
			{
				chart3D.updateScene(configXML,dataXML);
				
			}

			protected function button1_clickHandler(event:MouseEvent):void
			{
				xmlUrl = urlTextInput.text;
				loadXML();
			}


			protected function button2_clickHandler(event:MouseEvent):void
			{
				configXML = XML(configXMLTextArea.text);
				chart3D.createAxisFromXML(configXML.axis[0]);
				chart3D.renderClick();
			}


			protected function button3_clickHandler(event:MouseEvent):void
			{
				//chart3D.setCamera(Number(px.text),Number(py.text),Number(pz.text),Number(rotX.text),Number(rotY.text),Number(rotZ.text));
				configXML = XML(configXMLTextArea.text);
				chart3D.setCameraFromXML(configXML.camera[0]);
				chart3D.renderClick();
			}


			protected function button4_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				configXML = XML(configXMLTextArea.text);
				chart3D.setPositionFromXML(configXML.position[0]);
				chart3D.renderClick();
			}

		]]>
	</mx:Script>
	<mx:Button x="607" y="34" label="4.createCubeFromXML" click="button1_clickHandler(event)" width="165"/>

	<mx:Canvas id="chart3DCanvas" width="762" height="526" x="10" y="64">
	</mx:Canvas>
	<mx:Label x="347" y="37" text="数据" width="29"/>
	<mx:TextInput id="urlTextInput" x="382" y="34" width="224"/>
	<mx:TextArea id="configXMLTextArea" x="780" y="34" width="274" height="467" />
	<mx:Button x="902" y="509" label="1.createAxisFromXML" click="button2_clickHandler(event)"/>
	<mx:Button x="902" y="539" label="2.setCameraFromXML" click="button3_clickHandler(event)" height="22" width="152"/>
	<mx:Button x="902" y="569" label="3.setD3oAll" click="button4_clickHandler(event)" width="152"/>
</mx:Application>
