<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="310" creationComplete="init()" borderStyle="solid">
	<mx:FormHeading label="节信息" x="163" y="10"/>
	<mx:Canvas id="addPanel" width="390" height="112" y="26" x="4">
		<mx:FormItem label="所在课程" x="45" y="10">
			<mx:ComboBox id="inCourse" labelField="@name"/>
		</mx:FormItem>
		<mx:FormItem label="所在章" x="56" y="42">
			<mx:ComboBox id="inChapter" dataProvider="{inCourse.selectedItem.chapter}" labelField="@name"/>
		</mx:FormItem>
		<mx:FormItem label="位置" x="67" y="74" direction="horizontal" horizontalGap="1">
			<mx:ComboBox id="afterSection" dataProvider="{inChapter.selectedItem.section}" labelField="@name" prompt="首位"/>
			<mx:Label text="之后"/>
		</mx:FormItem>
		<mx:HRule id="hRule" width="315" height="1" x="43" y="107"/>
		<mx:CheckBox id="firstPosition" x="309" y="74" label="居首" change="onCheckBoxChange()"/>
	</mx:Canvas>
	<mx:Canvas id="editPanel" height="170" width="390" y="137" x="4">
		<mx:FormItem label="节名称" x="58.5" y="6" required="true">
			<mx:TextInput id="sname"/>
		</mx:FormItem>
		<mx:FormItem label="节标题" x="58.5" y="36">
			<mx:TextInput id="title"/>
		</mx:FormItem>
		<mx:FormItem label="文件类型" x="48.25" y="66">
			<mx:ComboBox id="type">
				<mx:dataProvider>
					<mx:Object label="Flash" data="flash"/>
					<mx:Object label="Flex" data="flex"/>
					<mx:Object label="Image" data="image"/>
					<mx:Object label="Album" data="album"/>
					<mx:Object label="Flv" data="flv"/>
				</mx:dataProvider>
			</mx:ComboBox>
		</mx:FormItem>
		<mx:FormItem label="文件路径" direction="horizontal" x="49.75" y="96" required="true">
			<mx:TextInput id="path" width="185"/>
			<mx:Button label="浏览" click="file.browseForOpen('选择文件');temp='path'"/>
		</mx:FormItem>	
		<mx:FormItem label="配置文件" direction="horizontal" y="126" x="49">
			<mx:TextInput id="xml" width="185"/>
			<mx:Button label="浏览" click="file.browseForOpen('选择文件');temp='xml'"/>
		</mx:FormItem>	
	</mx:Canvas>
	<mx:StringValidator id="stringValidator" requiredFieldError="值不能为空!"/>
	<mx:NumberValidator id="chapterValidator" lowerThanMinError="章不能为空!" minValue="0" />

	<mx:DateFormatter id="formatter" formatString="DDHNNSS"/>
	<mx:Script>
		<![CDATA[
			import mx.events.ListEvent;
			import puremvc.model.utils.CurrentInfo;
			import org.puremvc.as3.patterns.facade.Facade;
			import mx.events.ValidationResultEvent;	
				
			private var temp:String;
			private var sid:String;
			public var state:String;			
			private var file:File=File.applicationDirectory;	
			private var currInfo:CurrentInfo=CurrentInfo.getInstance();
			
			public function init():void
			{
				file.addEventListener(Event.SELECT,onSelect);
			}
			public function onSelect(evt:Event):void
			{
				if(temp=="path")
				{
					path.text=evt.target.nativePath;
				}
				if(temp=="xml")
				{
					xml.text=evt.target.nativePath;
				}
			}
			public function onCheckBoxChange():void
			{
				if(this.firstPosition.selected){
					this.afterSection.enabled=false;
				}else{
					this.afterSection.enabled=true;
				}
			}
			/* public function positionChange():void
			{
				if(afterSection.selectedIndex==-1)
				{
					firstPosition.selected=true;
				}				
			} */
			public function reset():void
			{				
				this.sname.text=null;
				this.type.selectedIndex=0;
				this.path.text=null;
				this.title.text=null;
				this.xml.text=null;
				this.firstPosition.selected=false;
				this.firstPosition.dispatchEvent(new ListEvent(ListEvent.CHANGE));
			}
			public function setter(data:XML):void
			{
				this.sid=data.@id;
				if(data.hasOwnProperty("@name"))this.sname.text=data.@name;
				if(data.hasOwnProperty("@type")){
					switch(data.@type.toString())
					{
						case "flash" : this.type.selectedIndex=0;break;
						case "flex"  : this.type.selectedIndex=1;break;
						case "image" : this.type.selectedIndex=2;break;
						case "album" : this.type.selectedIndex=3;break;
						case "flv"   : this.type.selectedIndex=4;break;
					}
				}								
				if(data.hasOwnProperty("@path"))this.path.text=data.@path;
				if(data.hasOwnProperty("@title"))this.title.text=data.@title;
				if(data.hasOwnProperty("@xml"))this.xml.text=data.@xml;
			}
			public function getter():XML
			{
				var xml:XML=<section/>;
				if(state=="edit"){
					xml.@id=this.sid;
				}else if(state=="add"){
					xml.@id=formatter.format(new Date());
				}				
				xml.@name=sname.text;
				xml.@type=type.selectedItem.data;
				xml.@path=path.text;
				xml.@title=title.text;
				xml.@xml=this.xml.text;			
				return xml;
			}
			public function getPosition():Object
			{
				var obj:Object=new Object();
				obj.inCourse=this.inCourse.selectedItem;
				obj.inChapter=this.inChapter.selectedItem;
				if(this.firstPosition.selected==false)
				{
					obj.afterSection=this.afterSection.selectedItem;
				}				
				return obj;
			}
			public function validate():Boolean
			{
				stringValidator.listener=sname;								
				var nameVR:ValidationResultEvent=stringValidator.validate(sname.text);
				stringValidator.listener=path;				
				var pathVR:ValidationResultEvent=stringValidator.validate(path.text);
				chapterValidator.listener=inChapter;
				var chapterVR:ValidationResultEvent=chapterValidator.validate(inChapter.selectedIndex);
				if(nameVR.type==ValidationResultEvent.VALID && pathVR.type==ValidationResultEvent.VALID && chapterVR.type==ValidationResultEvent.VALID){
					return true;
				}else{
					return false;
				}
			}
			public function changePosition():void
			{
				if(this.state=="edit")
				{
					this.addPanel.visible=false;
					this.editPanel.y=this.addPanel.y+10;
				}
				else
				{
					this.addPanel.visible=true;
					this.editPanel.y=this.addPanel.y+this.addPanel.height;
				}
				setCurrentInfo();					
			}
			public function setCurrentInfo():void
			{
				this.inCourse.selectedItem=currInfo.getCourse();
				if(currInfo.getChapter()!=null&&XMLList(inChapter.dataProvider).contains(currInfo.getChapter()))
				{
					this.inChapter.selectedItem=currInfo.getChapter();
				}
				else
				{
					this.inChapter.selectedIndex=XMLList(inChapter.dataProvider).length()-1;
				}
				callLater(laterHandle);
			}
			private function laterHandle():void
			{				
				if(currInfo.getSection()!=null&&XMLList(afterSection.dataProvider).contains(currInfo.getSection()))
				{
					this.afterSection.selectedItem=currInfo.getSection();
				}
				else
				{
					afterSection.selectedIndex=XMLList(afterSection.dataProvider).length()-1;
				}
			}
		]]>
	</mx:Script>
</mx:Canvas>
