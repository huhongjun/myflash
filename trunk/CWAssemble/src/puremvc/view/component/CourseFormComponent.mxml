<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="310" creationComplete="init()" borderStyle="solid">
	<mx:FormHeading label="课程信息" x="159.5" y="10"/>
	<mx:Canvas id="addPanel" width="390" height="60" y="26" x="4">
		<mx:FormItem label="所在位置" x="58.5" y="14" direction="horizontal" horizontalGap="1">
			<mx:ComboBox id="afterCourse" labelField="@name" prompt="首位" width="145"/>
			<mx:Label text="之后"/>
		</mx:FormItem>
		<mx:HRule id="hRule" width="300" height="1" x="55.5" y="49"/>
		<mx:CheckBox id="firstPosition" x="306.5" y="13" label="居首" change="onChange()"/>
	</mx:Canvas>
	<mx:Canvas id="editPanel" height="222" width="390" y="85" x="4">
		<mx:FormItem label="课程名称" x="61.5" y="10" required="true">
			<mx:TextInput id="cname"/>
		</mx:FormItem>
		<mx:FormItem label="课程标题" x="61.5" y="42">
			<mx:TextInput id="title"/>
		</mx:FormItem>
		<mx:FormItem label="开始动画" direction="horizontal" x="61.5" y="74">
			<mx:TextInput id="startSWF" width="160"/>
			<mx:Button label="浏览" click="file.browseForOpen('选择文件');temp='startSWF'"/>
		</mx:FormItem>
		<mx:FormItem label="结束动画" direction="horizontal" x="61.5" y="106">
			<mx:TextInput id="endSWF" width="160"/>
			<mx:Button label="浏览" click="file.browseForOpen('选择文件');temp='endSWF'"/>
		</mx:FormItem>
	</mx:Canvas>	
	<mx:StringValidator id="stringValidator" requiredFieldError="值不能为空!"/>
	<mx:DateFormatter id="formatter" formatString="DDHNNSS"/>
	<mx:Script>
		<![CDATA[
			import mx.events.ListEvent;
			import puremvc.model.utils.CurrentInfo;	
			import mx.events.ValidationResultEvent;				
			private var file:File=File.applicationDirectory;
			private var temp:String;
			private var cid:String;
			public var state:String;			
			
			public function init():void
			{
				file.addEventListener(Event.SELECT,onSelect);
			}
			public function onSelect(evt:Event):void
			{
				if(temp=="startSWF")
				{
					startSWF.text=evt.target.nativePath;
				}
				if(temp=="endSWF")
				{
					endSWF.text=evt.target.nativePath;
				}
			}
			public function onChange():void
			{
				if(this.firstPosition.selected){
					this.afterCourse.enabled=false;
				}else{
					this.afterCourse.enabled=true;
				}
			}
			public function reset():void
			{
				this.cname.text=null;				
				this.title.text=null;
				this.startSWF.text=null;
				this.endSWF.text=null;
				this.firstPosition.selected=false;
				this.firstPosition.dispatchEvent(new ListEvent(ListEvent.CHANGE));
			}
			public function setter(data:XML):void
			{
				this.cid=data.@id;
				if(data.hasOwnProperty("@name"))this.cname.text=data.@name;
				if(data.hasOwnProperty("@title"))this.title.text=data.@title;			
				if(data.hasOwnProperty("@startSWF"))this.startSWF.text=data.@startSWF;				
				if(data.hasOwnProperty("@endSWF"))this.endSWF.text=data.@endSWF;
			}
			public function getter():XML
			{
				var currInfo:CurrentInfo=CurrentInfo.getInstance();
				var xml:XML=<course/>;
				if(state=="edit"){
					xml.@id=this.cid;
					xml.setChildren(currInfo.getCourse().chapter);
				}else if(state=="add"){
					xml.@id=formatter.format(new Date());
				}				
				xml.@name=cname.text;
				if(title.text!=null && title.text!="")xml.@title=title.text;
				if(startSWF.text!=null && startSWF.text!="")xml.@startSWF=startSWF.text;
				if(endSWF.text!=null && endSWF.text!="")xml.@endSWF=endSWF.text;				
				return xml;
			}
			public function getPosition():Object
			{
				var obj:Object=new Object();						
				if(this.firstPosition.selected==false)
				{
					obj.afterCourse=this.afterCourse.selectedItem;
				}				
				return obj;
			}
			public function validate():Boolean
			{
				stringValidator.listener=cname;				
				var nameVR:ValidationResultEvent=stringValidator.validate(cname.text);				
				if(nameVR.type==ValidationResultEvent.VALID){
					return true;
				}else{
					return false;
				}
			}
			public function changePosition():void
			{
				if(this.state=="edit")
				{
					this.addPanel.visible=false;
					this.editPanel.y=this.addPanel.y+10;
				}
				else
				{
					this.addPanel.visible=true;
					this.editPanel.y=this.addPanel.y+this.addPanel.height;
				}	
				setCurrentInfo();					
			}
			public function setCurrentInfo():void
			{
				var currInfo:CurrentInfo=CurrentInfo.getInstance();
				this.afterCourse.selectedItem=currInfo.getCourse();				
			}
		]]>
	</mx:Script>
</mx:Canvas>
