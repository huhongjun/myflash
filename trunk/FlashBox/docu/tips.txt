1、组织时间轴和库
时间轴上的帧和图层为您显示资源的放置位置，并确定文档的工作方式。 时间轴和库的设置方式和使用方式将影响整个 FLA 文件及其整体可用性。 以下准则可帮助您高效地创作文档内容，并支持使用您的 FLA 文档的其他创作者能够更好地理解文档的构建方式。

为每个图层起一个直观的图层名，并将相关资源放在相同位置。 请避免使用默认的图层名（例如，图层 1、图层 2）。

为每个图层或文件夹命名时，请清楚地说明其用途或内容。

在合适的情况下，将包含 ActionScript 的图层和用于设置帧标签的图层放在时间轴中图层堆栈的最上方。 例如，将包含 ActionScript 的图层命名为动作。

使用图层文件夹来分组和组织类似的图层，以便于找到包含代码和标签的图层。

锁定不使用或不需要修改的图层。 直接锁定 ActionScript 图层，以便不能在该图层上放置元件实例或媒体资源。

切勿将任何实例或资源放到包含 ActionScript 的图层上。 因为这可能会导致舞台上的资源和引用资源的 ActionScript 之间发生冲突，所以请将所有代码放在各自的“动作”图层上，并在创建操作图层后将其锁定。

如果要在 ActionScript 代码中引用帧，则请在代码中使用 FLA 文件中的帧标签，而不要使用帧号。 如果在以后编辑时间轴时这些帧发生更改，并且使用的是帧标签且在时间轴上移动了这些帧，则无需更改代码中的任何引用。

使用库文件夹

使用库中的文件夹来组织 FLA 文件中的类似元素（例如元件和媒体资源）。 如果每次创建文件时对库文件夹的命名方式都一致，则会很容易回想起资源所放置的位置。 常用的文件夹名有 Buttons、MovieClips、Graphics、Assets、Components，有时还使用 Classes。

2、将动作保存在一起 
尽可能将 ActionScript 放在同一位置。 在一个位置组织代码有助于更高效地编辑项目，因为在调试或修改 ActionScript 时，可避免在不同的位置中进行搜索。 如果将代码放在 FLA 文件中，则应把 ActionScript 放在时间轴顶层称为动作 的图层的第 1 帧或第 2 帧上。 或者，也可以将所有代码放在 ActionScript 文件中。 有些 Flash 应用程序并不总是将所有代码放在同一位置（尤其是使用屏幕或行为的基于 ActionScript 2.0 的应用程序）。 

通常，可以将所有代码放在同一位置（帧上或 ActionScript 文件中），这样做具有如下优点：

容易在可能很复杂的源文件中找到代码。

容易调试代码。


3、将代码附加到对象 
避免将 ActionScript 附加到 FLA 文件中的对象，即使是在简单的 SWF 文件中也不应这样。 （只有 ActionScript 1.0 和 2.0. 可以附加到对象；ActionScript 3.0 不能附加。） 将代码附加到对象意味着您选择一个影片剪辑、组件或按钮实例；打开“动作”面板；然后使用 on() 或 onClipEvent() 处理函数添加 ActionScript。 

出于以下原因，强烈建议不要将 ActionScript 代码附加到对象上：

很难定位，而且 FLA 文件很难编辑。

很难调试。

在时间轴上或类中编写的 ActionScript 更完美、更容易进行构建。

导致编码风格欠佳。

这两种编码风格间的比较可能会给学习 ActionScript 的人造成混乱，使学员和读者不得不学习不同的编码风格、其它语法，以及拙劣而又存在局限性的编码风格。

避免将 ActionScript 2.0 附加到名为 myButton_btn 的按钮，该按钮的外观如下所示：

on (release) {
	//do something
}但是，出于同样的目的建议将 ActionScript 2.0 放在时间轴上，如下面的代码所示：

myButton_btn.onRelease = function() {
	//do something
};注： 使用行为时（有时需要将代码附加到对象）要采取不同的做法。

4/关于项目和版本控制
Flash 中的项目允许团队成员共同处理一个 Flash 应用程序或项目。 项目文件可记住它所包含的每个文件，允许您将多个 SourceSafe 功能合并到应用程序中，从而帮助您保存已修改文件的备份。

注： Adobe? Flash? CS3 Professional（及早期版本）不支持在 Macintosh 上使用 Microsoft Visual SourceSafe 进行版本控制。
要将多个文件组织到一个项目文件中，请使用“项目”面板。 这将有助于简化应用程序的构建（在此期间，相关文件的管理会变得既复杂又混乱）。 您可以为自己的工作定义一个站点，创建 Flash 项目文件 (FLP)，然后将所有内容都上载到服务器，以便团队可以处理该项目。

版本控制允许您在存储库中存取文件，并确认在某时间只有一个人在处理某文件。 其它优点还包括可以恢复到文件的较早版本。

版本控制功能有助于确保您在创作时使用的是正确的当前文件，并且没有覆盖某些文件。

通常，您可以将当前的源控制软件与 Flash 一起使用，但可能无法将其与“项目”面板相集成。 目前支持 Microsoft Visual SourceSafe。 其它软件程序也可以管理和控制 Flash 文档，但您可能无法将它们与“项目”面板相集成。


5/管理项目
对项目指定一名管理员。 这个人负责创建和维护项目的结构。 例如，通过文件夹来合并相似的文件，从而对文档进行逻辑划分。 通常，多名创作者会同时处理一个 Flash 项目。 

重要说明： 管理员是唯一能够更改项目文件和结构的人。
管理员执行以下任务：

确认对项目结构所做的更改，这有利于项目的稳定性。 

定义站点并创建 Flash 项目 (FLP)、主 FLA 文档以及项目资源的任何子目录。 这些目录可能包含动态加载到项目的媒体、图像或类。 

将所有内容上载到服务器。 

为项目创建清晰的结构，并向正在使用该应用程序的每个人告知该项目的运作方式以及在何处添加其它资源（如类和图像文件）。


//
VSS
	必须本机安装VSS客户端
	Flash中文件必须关闭后才能提交