<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml" width="400" height="300" creationComplete="initApp(event)">
	<mx:Script>
		<![CDATA[
			import info.osmatrix.rmengine.components.Chart3D;
			
			import mx.events.NumericStepperEvent;
			
			public var configXMLUrl:String;
			public var dataXMLUrl:String;
			
			private var configXML:XML;
			private var dataXML:XML;
			private var cameraXML:XML;

			[Bindable]
			public var isDebug:Boolean = false;	// 调试开关
			public var bgColor:Number = 0xFFFFFF;	// 填充背景色
			public var iViewIndex:int = 0;
			
			private var chart3D:Chart3D;
			
			private function initApp(e:Event):void
			{
				create3D();
			}
			
			public function create3D():void
			{
				//
				if(chart3D)
				{
					chart3D.removeEventListener("RotationEvent",showMsg);
					this.rawChildren.removeChild(chart3D);
				}
				
				chart3D = new Chart3D();
				this.rawChildren.addChildAt(chart3D,0);
				
				chart3D.setup3D(this.width,this.height,bgColor,isDebug);
				chart3D.addEventListener("RotationEvent",showMsg);
			}
			
			public function loadData():void
			{
				loadConfigXML();
			}

			private function loadConfigXML():void
			{
				var urlReq:URLRequest = new URLRequest(configXMLUrl);
				var urlLoader:URLLoader = new URLLoader();
				
				urlLoader.addEventListener(Event.COMPLETE, configXMLComplete);
				urlLoader.load(urlReq);			
				
			}
			
			private function loadDataXML():void
			{
				var urlReq:URLRequest = new URLRequest(dataXMLUrl);
				var urlLoader:URLLoader = new URLLoader();
				
				urlLoader.addEventListener(Event.COMPLETE, dataXMLComplete);
				urlLoader.load(urlReq);			
				
			}
			
			private function configXMLComplete(evt:Event):void
			{
				var xml:XML = XML(evt.target.data);
				
				//
				updateConfig(xml);
				
				// 配置文件加载成功后再加载数据文件
				loadDataXML();

			}
			
			private function dataXMLComplete(evt:Event):void
			{
				var xml:XML = XML(evt.target.data);
				
				updateData(xml);
			}

			// 
			public function updateConfig(confXML:XML):void
			{
				configXML = confXML;
				
			}
			
			public function updateData(dtXML:XML):void
			{
				dataXML = dtXML;
				
				// 绘制图形
				chart3D.createAxisFromXML(configXML.axis[0]);
				chart3D.createAxisMarkFromXML(configXML.axis[0]);
				chart3D.setCameraFromXML(configXML.camera[0].view[iViewIndex]);
				chart3D.setPositionFromXML(configXML.camera[0].view[iViewIndex].position[0]);
				
				chart3D.createCubeFromXML(dataXML);	
				
				chart3D.renderClick();
				
			}
			
			private function showMsg(evt:Event):void
			{
				msgP.text = "位置:("+Math.round(chart3D.camera.x)+","+Math.round(chart3D.camera.y)+","+Math.round(chart3D.camera.z)+")\n"
					+"旋转:（"+Math.round(chart3D.camera.rotationX)+"，"+Math.round(chart3D.camera.rotationY)+"，"+Math.round(chart3D.camera.rotationZ)+"）\n"
					+"焦距: "+chart3D.camera.focus+"\n";						
				
			}

		]]>
	</mx:Script>
	<mx:CheckBox x="10" label="坐标" click="chart3D.d3oAxis.visible = !chart3D.d3oAxis.visible;" selected="true" bottom="41"/>
	<mx:CheckBox x="10" label="平面" click="chart3D.d3oAxisMark.visible = !chart3D.d3oAxisMark.visible;" selected="true" bottom="22"/>
	<mx:CheckBox x="10" label="立方" click="chart3D.d3oCube.visible = !chart3D.d3oCube.visible;" selected="true" bottom="5"/>
	<mx:Text text="位置:(109906,100000,-255000)&#xa;旋转:（30，-30，0）&#xa;焦距: 50&#xa;" width="152" height="50" id="msgP" right="0" top="0" fontFamily="Arial"/>

</mx:Canvas>
