<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" 
	creationComplete="initApp()" keyDown="onKeyDown(event)" >

	<mx:SWFLoader id="mainSWFLoader" source="MainFlash.swf" x="0" y="0" width="800" height="600" autoLoad="true"/>
	<mx:SWFLoader id="contentSWFLoader" x="132.15" y="97.85" width="648.85" height="389.2" scaleContent="true"/>
	
	<mx:XML id="configXML" source="config.xml" />
	<mx:Script>
		<![CDATA[
			import mx.messaging.AbstractConsumer;
			/*
			 *	contentSWFLoader	-	用于播放内容
			 * 	mainSWFLoader 		-	用于人机交互界面
			 *
			 */
			 
			// 监听continue、exit事件，加载mainFlex并激活AppliationFacade
			// 监听main.swf的exit事件
			// exit事件后加载播放end.swf
			import info.osmatrix.rmframework.app.ApplicationFacade;
							
			private var facade:ApplicationFacade;	
			private var viewHelper:IMainView;
			
			private var viewIndex:int = 0;
			private var viewObject:Object = new Object();
			
			private function initApp():void
			{
				// 读配置文件config.xml;获得片头、片尾和主界面swf文件
				
				// 暂时调试

				switchView();	
			}
			
			private function onKeyDown(evt:KeyboardEvent):void
			{
				trace(evt.keyCode.toString());
			}
			private function switchView():void
			{
				viewIndex = (viewIndex+1 >= 3)?0:viewIndex+1;
				mainSWFLoader.addEventListener(Event.COMPLETE, onMainLoaded);
				
				var i:int = 0;
				var selectview:XML;
				var views:XMLList = XMLList(configXML..view);
				for each(var view:XML in views)
				{
					i = i+1;
					if(i == viewIndex) {selectview = view;}
				}
				
				viewObject.type = selectview.@type;
				viewObject.url	= selectview.@url;
				mainSWFLoader.load(viewObject.url)

			}
			private function onMainLoaded(evt:Event):void
			{
				var mainViewer:Object;
						
				if(viewObject.type == "flex")
				{
					mainSWFLoader.removeEventListener(Event.COMPLETE, onMainLoaded);
					var sysMgr:SystemManager = mainSWFLoader.content as SystemManager;
					sysMgr.addEventListener(FlexEvent.APPLICATION_COMPLETE, onMainAppComplete);
				}
				else if (viewObject.type == "flash")
				{
					onMainAppComplete(new Event(""));
				}
				
			}
			
			private function onMainAppComplete(evt:Event):void
			{
				initPureMVC();
			}
			private function initPureMVC():void{

				// 获得主界面swf的应用
				var mainViewer:Object;
						
				if(viewObject.type == "flex")
				{
					mainViewer = Object(mainSWFLoader.content).application;
				}
				else if (viewObject.type == "flash")
				{
					mainViewer = MovieClip(mainSWFLoader.content);
				}
				viewHelper = mainViewer.viewHelper as IMainView;
				
				// PureMVC 加载	
				facade = ApplicationFacade.getInstance();
				facade.startup(this);
				
			}
		]]>
	</mx:Script>
	<mx:Script>
		<![CDATA[
			import info.osmatrix.rmframework.app.view.IMainView;
		
			/*
			 * 	标准接口定义
			 */
			import info.osmatrix.rmframework.app.model.vo.*;
			import mx.events.*;
			import mx.managers.SystemManager;
						
			private var playerType:String;
			private var playerUrl:String;
					 
			public function initContent(content:ContentVO):void
			 {
				// main.swf 主界面数据初始化
			 	viewHelper.initContent(content);

				// index.swf 根据界面插件的占位符矩形位置设置播放器，使之完全重叠
				var rect:DisplayObject = viewHelper.getPlayerRect();
				
				contentSWFLoader.x = rect.x;
				contentSWFLoader.y = rect.y;
				contentSWFLoader.width = rect.width;
				contentSWFLoader.height = rect.height;				
			 }
			public function refreshUI():void
			 {
			 	viewHelper.refreshUI();
			 }

			// 
			public function playSection(chapter:ChapterVO,section:SectionVO):void
			{
				// 根据节的类型选择模块；根据节的url播放内容
				playerType = section.type;
				playerUrl = section.path; 
				
				// 解决切换播放内容后，遗留的背景声音
				flash.media.SoundMixer.stopAll();
				
				// @TODO: 改成通过配置文件根据播放器名称获得url，可能有不同的监听时间列表
				switch(playerType)
	        	{        		
	        		case "flash":
	        			contentSWFLoader.addEventListener(Event.COMPLETE ,onPlayerLoaded);
	        			contentSWFLoader.load("SWFPlayer.swf");
	        			break;        		
	        		case "image":
	        			contentSWFLoader.addEventListener(Event.COMPLETE ,onPlayerLoaded);
	        			contentSWFLoader.load("ImagePlayer.swf");
	        			break;
	        		case "flv":
	        			contentSWFLoader.addEventListener(Event.COMPLETE ,onPlayerLoaded);
	        			contentSWFLoader.load("FLVPlayer.swf");
	        			break;
	        	}
	        	
				viewHelper.updateLocator(chapter,section);
			}
			
			public function exitApp():void
			{
				//
				fscommand("quit");
			}
			
			private function onPlayerLoaded(evt:Event):void
			{
				contentSWFLoader.removeEventListener(Event.COMPLETE, onPlayerLoaded);
				var sysMgr:SystemManager = contentSWFLoader.content as SystemManager;
				sysMgr.addEventListener(FlexEvent.APPLICATION_COMPLETE, onPlayerAppComplete);
				
			}
			
			private function onPlayerAppComplete(evt:FlexEvent):void
			{
				var sysMgr:SystemManager = contentSWFLoader.content as SystemManager;

				Object(sysMgr.application).loadXML(playerUrl);
			}			 
		]]>
	</mx:Script>
	<mx:Button x="0" y="0" click="switchView()" visible="true" id="btnSwitchView"/>
	
</mx:Application>
