<?xml version="1.0" encoding="utf-8"?>
<mx:Application 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:viewcomp="info.osmatrix.rmframework.component.*" 
	creationComplete="init()" layout="absolute">
	<mx:SWFLoader id="swfLoader" width="100%" height="90%" horizontalAlign="center" verticalAlign="middle" x="0" y="0" complete="loadComplete(event)" unload="swfUnload(event)" scaleContent="true"/>
	<viewcomp:ProgressBoardComponent id="progressBoard" x="0" horizontalAlign="center" verticalAlign="middle" width="100%" height="10%" bottom="0"/>	
	<mx:Script>
		<![CDATA[
			import mx.events.SliderEvent;
			private var mc:MovieClip;
			private var stoped:Boolean=true;	//记录当前播放状态是否停止
			private var pressing:Boolean;//进度条拖拽按钮是否按下
			public var type:String;
			
			public function init():void
			{
				progressBoard.btnPlayOrPause.addEventListener("play",play);	
				progressBoard.btnPlayOrPause.addEventListener("pause",pause);
				progressBoard.btnStop.addEventListener(MouseEvent.CLICK,stop);
				progressBoard.sldCtrlProgress.snapInterval=1;
				progressBoard.sldCtrlProgress.buttonMode=true;				
				progressBoard.sldCtrlProgress.dataTipFormatFunction=formatProgressToolTip;				
				progressBoard.sldCtrlProgress.addEventListener(SliderEvent.CHANGE,progressChange);
				progressBoard.sldCtrlProgress.addEventListener(SliderEvent.THUMB_PRESS,thumbPress);
				progressBoard.sldCtrlProgress.addEventListener(SliderEvent.THUMB_RELEASE,thumbRelease);							
			}
			
			public function loadXML(url:String):void
			{
				load(url);
			}
			
			public function load(url:String,type:String=null):void
			{
				this.type=type;
				if(type=="flex")
				{
					if (contains(progressBoard))                
			 		removeChild(progressBoard); 
				}
				else
				{
					if (!contains(progressBoard))                
			 		addChild(progressBoard); 
				}				
				swfLoader.load(url);
			}
			
			public function play(evt:MouseEvent):void
			{			
				if(mc!=null && stoped)
				{
					mc.play();
					stoped=false;
				}
			}
			
			private function pause(evt:MouseEvent):void
			{
				if(mc!=null && !stoped)
				{
					mc.stop();
					stoped=true;
				}				
			}
			
			private function stop(evt:MouseEvent):void
			{				
				progressBoard.sldCtrlProgress.value=progressBoard.sldCtrlProgress.minimum;
				if(mc!=null)
				{
					mc.gotoAndStop(1);
					if(stoped==false)
					{
						stoped=true;
						progressBoard.pauseState();
					}	
				}
			}			
			
			private function progressUpdate(evt:Event):void
			{
				progressBoard.sldCtrlProgress.value=mc.currentFrame;
				if(progressBoard.sldCtrlProgress.value==progressBoard.sldCtrlProgress.maximum)
				{					
					if(stoped==false)
					{
						progressBoard.pauseState();
						stoped=true;
					}				
				}
			}		
			
			private function progressChange(evt:SliderEvent):void
			{ 			
				if(mc!=null)
				{
					if(stoped || pressing)
					{
						mc.gotoAndStop(evt.value);
					}
					else
					{
						mc.gotoAndPlay(evt.value);
					}
				}	
			}
			
			private function thumbPress(evt:SliderEvent):void
			{
				mc.stop();
				pressing=true;
			}
			
			private function thumbRelease(evt:SliderEvent):void
			{
				if(!stoped)mc.play();
				pressing=false;
			}	
			
			private function loadComplete(evt:Event):void
			{
				try
				{
					mc=MovieClip(swfLoader.content);	
					progressBoard.sldCtrlProgress.maximum=mc.totalFrames;			
					mc.addEventListener(Event.ENTER_FRAME,progressUpdate);					
					if(stoped==true)
					{
						progressBoard.playState();
						stoped=false;
					}									
				}
				catch(e:Error)
				{		
					mc=null;									
					trace("SWF文件转换成MovieClip对象时出错,可能与flash发布版本有关.");				
				}				
			}		
			
			public function swfUnload(evt:Event):void
			{
				if(mc!=null)
				{
					mc.stop();
					mc.removeEventListener(Event.ENTER_FRAME,progressUpdate);
					mc=null;
				}
			}
			
			//进度条 播放时间提示格式化
			public function formatProgressToolTip(value:int):String
	    	{
	    		value=Math.ceil(value / 12);  //flash 12frames/s  			
	    		var result:String = (value % 60).toString();
	      	    if (result.length == 1)
	      	    {
	         		result = Math.floor(value / 60).toString() + ":0" + result;
	       	 	}
	      		else
			  	{
	       	    	result = Math.floor(value / 60).toString() + ":" + result;
	       	  	}      			      			 
	      	    return result;
	  		} 				
		]]>
	</mx:Script>	
</mx:Application>
