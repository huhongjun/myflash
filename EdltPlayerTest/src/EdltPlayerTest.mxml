<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:edlt="edlt.*"
				layout="absolute"
				applicationComplete="{appCompHandler();}"
				currentState="intro">
	<mx:Script>
		<![CDATA[
			import communication.LSOCommunication;
			import mx.events.DragEvent;
			import mx.collections.XMLListCollection;
			import mx.rpc.events.ResultEvent;
			import events.PathEvent;
			[Bindable]
			private var introPath:String="";
			private var menuXML:XML=null;
			private var xmlList:XMLList;
			[Bindable]
			private var path:String="";
			// 当前播放节目的序号
			private var currentPlayId:String;
			// 用于为课程菜单提供数据的集合
			[Bindable]
			private var xmlDataCollection:XMLListCollection=new XMLListCollection();

			// 程序的初始工作
			private function appCompHandler():void
			{
				// 开放外部调用
				ExternalInterface.addCallback("goHome",goHomeCallback);
				httpSvr.send();
			}
			// 定义将来由js调用的
			// 对状态进行保存的
			// 函数
			private function goHomeCallback():void {
//				if (wasSuccessful) {	// 感觉这是一句废话，这个函数的执行不就说明调用成功了吗？
//					runSend();
//				} else {
//					getURL("javascript:alert('最后一次的状态没有上传！')");	// 调用js输出一个文本提示框
//				}
			}

			// HTTPService结果处理
			// 对原始的数据进行若干处理
			private function httpResultHandler(event:ResultEvent):void
			{
				menuXML=new XML(event.result);
				// 取得片头路径
				introPath=menuXML.Header.@data.toString();
				// 状态更新
				xmlList =menuXML.module.lesson.part; // 取得课程列表数据
				for (var i:* in xmlList) {
					xmlList[i].@id = i;
				}
				var lsoComm:LSOCommunication = new LSOCommunication();
				lsoComm.checkStatus(xmlList);
				xmlDataCollection.source=xmlList;
			}

			// 片头跳过处理
			private function introSkipHand():void
			{
				this.currentState="menu";
			}

			private function pathHandler(event:PathEvent):void
			{
				this.path=event.path;
				this.currentPlayId = event.currentPlayId; 
				this.currentState="main";
			}
			private function navigaterFn(flag:Boolean):void {
		    	var tXml:XML 
		    	if(flag) {
			    	tXml = xmlList[int(currentPlayId) - 1];
		    	} else {
		    		tXml = xmlList[int(currentPlayId) + 1];
		    	}
		    	var str:String = tXml.sco[0].@sub.toString();
		    	var i:int = str.indexOf(')')+1;
		    	var path:String = str.substring(i);
		    	path = "unit\\" + path + ".swf";
//		    	trace(this.path);
		    	// 状态保存
		    	var lsoComm:LSOCommunication = new LSOCommunication();
		    	lsoComm.saveStatus(currentPlayId,"1");
		    	lsoComm.checkStatus(xmlList);
		    	this.path = path;
		    	this.currentPlayId = tXml.@id.toString();
			}
		]]>
	</mx:Script>
	<mx:HTTPService id="httpSvr"
					url="data/menu2.xml"
					resultFormat="xml"
					result="httpResultHandler(event)"/>
	<!-- 集合 -->

	<mx:states>
		<!-- 片头动画 -->
		<mx:State name="intro">
			<mx:AddChild position="lastChild">
				<edlt:Intro id="intro"
							introSkip="introSkipHand()"
							source="{introPath}"
							>
				</edlt:Intro>
			</mx:AddChild>
		</mx:State>
		<!-- 课程菜单 -->
		<mx:State name="menu">
			<mx:AddChild>
				<mx:Canvas width="80%" height="80%" horizontalCenter="0" verticalCenter="0">
					<mx:List id="courseList"
							 width="100%"
							 height="100%"
							 dataProvider="{xmlDataCollection}"
							 itemRenderer="edlt.EdltMenuRenderer">
						<mx:creationComplete>
							<![CDATA[
								courseList.addEventListener(PathEvent.SELECT_PATH,pathHandler);
							]]>
						</mx:creationComplete>
					</mx:List>
				</mx:Canvas>
			</mx:AddChild>
		</mx:State>
		<mx:State name="main">
			<mx:AddChild>
				<edlt:MainPlayer source="{path}"
					horizontalCenter="0"
					verticalCenter="0"
					returnMenu="currentState = 'menu';"
					prevSco="navigaterFn(true)"
					nextSco="navigaterFn(false)"
					/>
			</mx:AddChild>
		</mx:State>
	</mx:states>
</mx:Application>
