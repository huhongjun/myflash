<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas 
	xmlns:mx="http://www.adobe.com/2006/mxml" 
	xmlns:degrafa="http://www.degrafa.com/2007"
	width="500" height="333"
	backgroundColor="#FFFFFF"
	>
	
	
	
	<mx:Script>
		<![CDATA[
			import com.san.utils.PhotoUtil;
			import mx.core.UIComponent;
			import mx.managers.DragManager;
			import mx.events.DragEvent;
			import com.san.components.library_classes.DragDataTypes;
			import com.san.values.Photo;
		
		
			public function set page( value:Page ):void
			{
				value.addEventListener( DragEvent.DRAG_DROP, dragDropHandler );
			}
	
			private function dragEnterHandler( event:DragEvent ):void
			{
				if( event.dragSource.hasFormat( DragDataTypes.BACKGROUND ) || event.dragSource.hasFormat( DragDataTypes.TILE ))
				{
					DragManager.acceptDragDrop( event.currentTarget as UIComponent );
				}
			}
		
		
			private function dragDropHandler(event:DragEvent):void
			{				
				if( event.dragSource.hasFormat( DragDataTypes.BACKGROUND ) )
					handleBackgroundDrop( event );

				if( event.dragSource.hasFormat( DragDataTypes.TILE ) )
					handleTileDrop( event );
			}
			
			
			
			private function handleBackgroundDrop( event:DragEvent ):void
			{
				var photo:Photo = event.dragSource.dataForFormat( DragDataTypes.BACKGROUND ) as Photo;
				l_loading.visible = true;
				
				backgrounds.source = PhotoUtil.getRegularSize( photo );
			}
			
			private function handleTileDrop( event:DragEvent ):void
			{
				/* var tile:Class = event.dragSource.dataForFormat( DragDataTypes.TILE ) as Class;
				tileFill.source = tile; */
			}
			
		]]>
	</mx:Script>
	

	<mx:Label id="l_loading" text="loading background" visible="false" horizontalCenter="0" verticalCenter="0" />
	
	<mx:Image id="backgrounds" width="100%" height="100%" trustContent="true" maintainAspectRatio="false" scaleContent="true" complete="{l_loading.visible=false}" ioError="{l_loading.visible=false}" securityError="{l_loading.visible=false}"/>
	
	
</mx:Canvas>
